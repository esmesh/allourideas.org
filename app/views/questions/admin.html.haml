= content_for :meta do
  <META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
= render :partial => 'shared/header_vote', :locals => {"show_delete" => true, :question => @question}

.tab-content
  .interior-content
    .row-fluid
      .span12
        %h3= t('nav.manage_question')
        #question-saved.alert.alert-success.hide
          = t('questions.question_saved')
        = link_to("Filter", '#filter-score', :"data-toggle" => 'modal', :class => 'btn')
        %input#question_id{ :type => "hidden", :value => @question.attributes['id']}
        %table.table.table-bordered.table-striped.table-condensed.tablesorter.ideas-table
          %thead 
            %tr
              %th
                %span.question-name
                  = @question.attributes['name']
                - if ((@question.votes_count == 0 && current_user.owns?(@earl)) || current_user.admin?)
                  = link_to("<i class='glyphicon glyphicon-pencil'></i>", '#edit-question', :"data-toggle" => 'modal', :class => 'btn')
                - else
                  = link_to("<i class='glyphicon glyphicon-pencil'></i>", '#cant-edit-question', :"data-toggle" => 'modal', :class => 'btn')
              %th.score
                =  t('items.score')
                = link_to('', '#score_explanation', :"data-toggle" => 'modal', :class => 'glyphicon glyphicon-question-sign')
              %th.score=  t('questions.source')
              %th.score= t('items.list.status').titleize
          %tbody 
            -for choice in @choices #.sort_by {|x| [(!!x.attributes['active']).to_s, x.data]}
              %tr{"data-choice-admin-stats" => '/questions/' + choice.question_id.to_s + '/choices/' + choice.id.to_s + '/admin_stats.json', :id => choice.id, :name=> choice.id }
                %td.title= link_to h(truncate(choice.title, :length => 140, :omission => 'â€¦')), question_choice_url(@earl.name, choice), :question_id => @earl.name, :"data-toggle" => "modal-ajax"
                %td.votes{"data-choice-stats-key" => "score"}
                  = image_tag('ajax-loader.gif')
                %td.votes= choice.attributes['user_created'] ? t('admin.user') : t('admin.seed')
                %td.votes{:id => "choice_#{choice.id}_status"}
                  -if @choices.size < 3
                    = choice.active? ? t('items.list.activated') : t('items.list.deactivated')
                  -else 
                    %button.toggle_choice_status.btn{:class => choice.active? ? 'btn-primary' : '', :"data-earl_id" => @earl.id, :"data-choice_id" => choice.id, :"data-status" => "#{choice.active?}"}
                      = choice.active? ? 'Activated' : 'Deactivated'
        %p
          = t('admin.this_question_created') + " #{time_ago_in_words(@earl.created_at)} " + t('admin.ago') 
          = t('admin.and_registered_to') + ": " + @earl.user.email
    
    .row-fluid
      .span12.question-admin-form
        -form_for :earl, @earl, :url => { :action => "update" }, :html => {:method => :put, :multipart => true, :class => 'form-horizontal'} do |f|
          -unless f.error_messages.blank?
            :javascript
              $(document).ready(function(){
                document.getElementById('errorExplanation').scrollIntoView(true);
              });
            .alert.alert-error
              = f.error_messages
          %fieldset
            %legend Question Settings
            .control-group
              %label.control-label{:for => 'question_username'}
                = t('admin.username')
              .controls
                = text_field_tag '', @earl.name, :disabled => true, :id => 'question_username'
            .control-group
              = f.label :pass, t('user.password') + ' ' + link_to('<i class="glyphicon glyphicon-question-sign"></i>', '#password_explanation', :"data-toggle" => 'modal'), :class => 'control-label'
              .controls
                = f.text_field :pass
    
            .control-group
              = f.label :welcome_message, "Welcome message " + link_to('<i class="glyphicon glyphicon-question-sign"></i>', '#welcome_msg_explanation', :"data-toggle" => 'modal'), :class => 'control-label'
              .controls
                = f.text_area :welcome_message, :rows => 5, :cols => 65, :class => 'input-xxlarge'
            .control-group
              = f.label :default_lang, "Default language " + link_to('<i class="glyphicon glyphicon-question-sign"></i>', 'http://blog.allourideas.org/post/5137327337/languages-and-all-our-ideas', :target=> '_blank'), :class => 'control-label'
              .controls
                = # Have English be the first, but sort the rest
                = f.select :default_lang, [["English", "en"]] + [["French", "fr"], ["Spanish", "es"], ["Portuguese", "pt"], ["Arabic", "ar"], ["Turkish", "tr"], ["Italian", "it"], ["Dutch", "nl"], ["Hebrew", "he"], ["German", "de"], ["Farsi", "fa"], ["Finnish", "fi"], ["Albanian", "sq"], ["Chinese", "zh"], ["Norwegian", "no"], ["Danish", "da"], ["Czech", "cs"]].sort
            .control-group
              = f.label :ga_code, t('admin.google_analytics_code') + ' ' + link_to('<i class="glyphicon glyphicon-question-sign"></i>', 'http://blog.allourideas.org/post/947544304/add-google-analytics-on-your-idea-marketplace', :target=> '_blank'), :class => 'control-label'
              .controls
                = f.text_field :ga_code
            .control-group
              %label.control-label
                = t('admin.widget_embed_code') 
                = link_to('', 'http://blog.allourideas.org/post/912665189/improved-widget-gives-you-more-control', :target=> '_blank', :class => 'glyphicon glyphicon-question-sign')
              .controls
                %input.widget-embed-code.input-xxlarge{:type => 'text', :readonly => 'readonly', :size => 30, :value => "<iframe src='http://widget.allourideas.org/#{@earl.name}' width='550' height='650' frameborder='0' scrolling='no'></iframe>"}
            #edit-image.control-group
              -if @earl.logo_file_name
                = f.label :logo_file_name, "Replace logo", :class => 'control-label'
              -else
                = f.label :logo_file_name, "Upload a logo", :class => 'control-label'
              .controls
                = f.file_field :logo
            .control-group
              .controls
                %label.checkbox
                  = f.check_box :flag_enabled
                  = f.label :flag_enabled, t('admin.allow_flag_as_inappropriate') + ' ' + link_to('', '#allow_flag_as_inappropriate_exp', :"data-toggle" => 'modal', :class => 'glyphicon glyphicon-question-sign')
                  = f.check_box :question_should_autoactivate_ideas
                  = f.label :question_should_autoactivate_ideas, t('admin.auto_activate_exp')
            .form-actions
              %button.btn.btn-primary{:type => 'submit'}
                Save changes
              %a.btn{:href => ""}
                Cancel
    
        %fieldset.download-data
          %legend
            = t('admin.download_idea_marketplace_data')
            %small= link_to('', 'http://blog.allourideas.org/post/2739358388/download-your-data', :target=> '_blank', :class => 'glyphicon glyphicon-question-sign')
          .row-fluid
            .span4.title
              = t('admin.list_of_ideas_csv')
            .span2
              = link_to(t('admin.request'), {:action => :export, :params => {:type => :ideas}}, :"data-toggle" => 'modal-ajax', :class => "btn btn-primary")
          .row-fluid
            .span4.title
              = t('admin.list_of_votes_csv')
            .span2
              = link_to(t('admin.request'), {:action => :export, :params => {:type => :votes}}, :"data-toggle" => 'modal-ajax', :class => "btn btn-primary", :id => "votes_request_link")
          .row-fluid
            .span4.title
              = t('admin.list_of_non_votes_csv')
            .span2
              = link_to(t('admin.request'), {:action => :export, :params => {:type => :non_votes}}, :"data-toggle" => 'modal-ajax', :class => "btn btn-primary")
  
  #filter-score.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h2= "Select the values you want to filter scores by"
    .modal-body
      %select#age_id
        %option{:value => "" } "Age..."
        - @ages.each do |a|
          %option{:value => a.id}= a.range
      %select#country_id
        %option{:value => "" } "Country..."
        - @countries.each do |a|
          %option{:value => a.id}= a.name
      %select#education_level_id
        %option{:value => "" } "Education level..."
        - @education_levels.each do |a|
          %option{:value => a.id}= a.name
      %input#education_field{:placeholder => "Education field..."}
      %select#software_experience_years_id
        %option{:value => "" } "Years developing software..."
        - @experience_years.each do |a|
          %option{:value => a.id}= a.range
      %select#domain_experience_years_id
        %option{:value => "" } "Years in domain..."
        - @experience_years.each do |a|
          %option{:value => a.id}= a.range
      %select#organization_type_id
        %option{:value => "" } "Organization type..."
        - @organization_types.each do |a|
          %option{:value => a.id}= a.name
      %input#position{:placeholder => "Position..."}
      %input#institution{:placeholder => "Institution..."}
      %select#field_of_studies_id
        %option{:value => "" } "Field of study..."
        - @field_of_studies.each do |a|
          %option{:value => a.id}= a.name
      %select#computational_resources_id
        %option{:value => "" } "Computational resources..."
        - @computational_resources.each do |a|
          %option{:value => a.id}= a.name
      %select#hours_using_software_id
        %option{:value => "" } "Hours a week using sw.."
        - @software_hours.each do |a|
          %option{:value => a.id}= a.range
      %select#hours_developing_software_id
        %option{:value => "" } "Hours a week developing sw..."
        - @software_hours.each do |a|
          %option{:value => a.id}= a.range
      %select#number_of_users_id
        %option{:value => "" } "Number of users of my software..."
        - @number_of_users.each do |a|
          %option{:value => a.id}= a.range
      %select#programming_languages_id{:multiple => true}
        %option{:value => "" } "Programming languages..."
        - @programming_languages.each do |a|
          %option{:value => a.id}= a.name
      %select#team_size_id
        %option{:value => "" } "Team size..."
        - @team_sizes.each do |a|
          %option{:value => a.id}= a.range
          
      %button.btn{:class => 'btn-primary', :type => "button", :onclick => "filterResults();", :"data-dismiss" => 'modal'}
        = "Filter"
        
  #cant-edit-question.modal.hide.fade
    .modal-body
      %p= t('questions.cant_edit_question')
    .modal-footer
      %button.close{:"data-dismiss" => 'modal'} x

  #edit-question.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h2= t('questions.edit_question')
    .modal-body
      - form_tag update_name_question_path(@earl), :method => :put do
        %p
          =t('questions.your_current_question_text', :question_text => h(@question.name), :"1" => '<span class="question-name">', :"_1" => '</span>')
        %p 
          =t('questions.type_question_prompt')
        = text_area_tag('question[name]', h(@question.name), :rows => 2, :maxlength => 255, :class => 'new_idea_field input-xxlarge', :id => 'edit_question_text')
        %h3.new_idea_counter
    .modal-footer
      %button.btn{:"data-dismiss" => "modal"} Cancel
      %button.btn.btn-primary.new_idea_submit#edit_question_submit{:rel => @question.id}= t('vote.submit')
    
  #score_explanation.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h2= t('items.about_scoring')
    .modal-body
      %p=t('items.score_explain')

  #password_explanation.modal.hide.fade
    .modal-body
      %p= t('admin.password_protect_exp')
    .modal-footer
      %button.close{:"data-dismiss" => 'modal'} x
    
  #welcome_msg_explanation.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h3= "Optional Welcome Message"
    .modal-body
      %p= t('admin.welcome_msg_long_exp')
      %p= t('admin.welcome_msg_long_exp2')
  
  #allow_flag_as_inappropriate_exp.modal.hide.fade
    .modal-body
      %p= t('admin.allow_flag_as_inappropriate_exp')
    .modal-footer
      %button.close{:"data-dismiss" => 'modal'} x


-content_for :head do
  = javascript_include_tag 'jquery.tablesorter.min.js', 'jquery.blockUI.js'

- content_for :view_javascript do
  $('.tablesorter').tablesorter({ textExtraction : 'complex', headers: { 0: {sorter: 'text'}, 1 : { sorter: 'digit' } , 2 : { sorter: 'text' }, 3 : { sorter: 'text'}, 4 : { sorter: false }, } });
  $('input.widget-embed-code').focus(function(ev) { $(this).select(); ev.preventDefault();});

